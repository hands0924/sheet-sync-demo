name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  REGION: ${{ secrets.GCP_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and push container
      run: |
        echo "Building image: gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}"
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: $SERVICE_NAME
        region: $REGION
        image: gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}
        flags: '--allow-unauthenticated'
        env_vars: |
          SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }}
          SHEET_NAME=${{ secrets.SHEET_NAME }}
          SOLAPI_API_KEY=${{ secrets.SOLAPI_API_KEY }}
          SOLAPI_API_SECRET=${{ secrets.SOLAPI_API_SECRET }}
          SOLAPI_SENDER=${{ secrets.SOLAPI_SENDER }}
          GCP_SA_KEY=${{ secrets.GCP_SA_KEY }}
          POLLING_INTERVAL=${{ secrets.POLLING_INTERVAL }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
